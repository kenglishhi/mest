<html>
  <head>
    <title>BiococonutIsland :: Workbench </title>
    <%= stylesheet_link_tag "/javascripts/ext-3.0.0/resources/css/ext-all.css",
      "ext-override",
      "ncbi-style"
  %>

    <%= javascript_tag "var FORM_AUTH_TOKEN = '#{form_auth_token}';" %>

    <%= javascript_include_tag'jquery-1.3.2.min.js',
      "ext-3.0.0/adapter/jquery/ext-jquery-adapter.js",
      "ext-3.0.0/adapter/ext/ext-base",
      "ext-3.0.0/ext-all" ,
      "workbench/base",
      "workbench/bio-notifier",
      "workbench/database-group-tree",
      "workbench/App",
      "workbench/restful-grid",
      "workbench/biosequence-grid",
      "workbench/biodatabase-grid",
      "workbench/biodatabase-group-grid",
      "workbench/blast-result-grid",
      "workbench/job-grid",
      "workbench/job-log-grid",
      "workbench/bio-property-grid",
      "workbench/RowEditor",
      "workbench/bio-sequence-view-panel",
      "workbench/bio-form-windows",
      "workbench/ncbi-blast-form"
  %>
    <style type="text/css">
      .x-window-dlg .ext-mb-download {
        background:transparent url(images/download.gif) no-repeat top left;
        height:46px;
      }
      #msg-div {
        position:absolute;
        left:35%;
        top:10px;
        width:250px;
        z-index:20000;
      }
    </style>
    <script type="text/javascript">

      Ext.namespace('Ext.workbenchdata');

      Ext.onReady(function(){
<%= render :partial => "layouts/user_job_notification" %>
    var biosequenceStore = <%=
extjs_store( :controller => "workbench/biosequences",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }
).render(false)
%>;
    var biodatabaseStore = <%=
extjs_store( :controller => "workbench/biodatabases",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }

).render(false)
%>;
    var biodatabaseComboStore = <%=
extjs_store( :controller => "workbench/biodatabases",
  :writer => {"encode" => false},
  :config => {
    "storeId" => 'biodatabase-combo-store',
    "autoLoad" => true,
    "autoSave" => false,
    "restful" => true
  }

).render(false)
%>;

    var biodatabasePropertyStore = <%=
extjs_store( :controller => "workbench/biodatabases",
  :writer => {"encode" => false},
  :config => {
    "storeId" => 'biodatabase-property-store',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }
).render(false)
%>;

    var biodatabaseGroupStore = <%=
extjs_store( :controller => "workbench/biodatabase_groups",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }
).render(false)
%>;
    var blastResultStore = <%=
extjs_store( :controller => "workbench/blast_results",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => false,
    "restful" => true
  }
).render(false)
%>


    var jobStore = <%=
extjs_store( :controller => "workbench/jobs",
    :model => 'Job',
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }

).render(false)
%>;

    var jobLogStore = <%=
extjs_store( :controller => "workbench/job_logs",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => true,
    "autoSave" => true,
    "restful" => true
  }

).render(false)
%>;


    var seqPageSize = <%= biosequence_page_size %> ;
    var databaseGroupPageSize = <%= biodatabase_group_page_size %> ;
    var dbPageSize = <%= biodatabase_page_size %> ;
    var blastResultPageSize = <%= blast_result_page_size %> ;
    var jobPageSize=  <%= job_page_size %> ;

    // BEGIN RAILS data DUMP
    Ext.workbenchdata.project_options = <%= @project_options.to_json %>;
    var north_html = '<h1 class="north-header"><%= link_to "BioFastaCoconutIsland", '/' %>  - <%= link_to "Home", '/' %> </h1> ';
    // END RAILS data dump  -- no erb code should go beyond this line
    var dbGroupTree = <%= BiodatabaseGroup.first.ext_tree(:expand_node => true).to_json %> ;
    // var dbGroupTree = {"expandable":true,"leaf":false,"text":"Default Database Group 1","children":[{"leaf":true,"text":"EST_Clade_A_3"},{"leaf":true,"text":"EST_Clade_A_6"},{"leaf":true,"text":"EST_Clade_C_6"},{"leaf":true,"text":"EST_Clade_A_1"},{"leaf":true,"text":"EST_Clade_A_5"},{"leaf":true,"text":"EST_Clade_A_3-Cleaned"},{"leaf":true,"text":"EST_Clade_A_6-Cleaned"},{"leaf":true,"text":"EST_Clade_C_6-Cleaned"},{"leaf":true,"text":"EST_Clade_A_1-Cleaned"},{"leaf":true,"text":"EST_Clade_A_5-Cleaned"},{"expandable":true,"leaf":false,"text":"Cleaned Data","children":[],"id":2,"expanded":true}],"id":1,"expanded":true} ;,

    // it is generally best to disable state management as dynamically-generated ids
    // can change across page loads, leading to unpredictable results.  The developer
    // should ensure that stable state ids are set for stateful components in real apps.
    Ext.state.Manager.setProvider(new Ext.state.CookieProvider());

    Ext.QuickTips.init();

    // use RowEditor for editing
    var editor = new Ext.ux.grid.RowEditor({
      saveText: 'Update'
    });

    Ext.bio.workbench.updateContent = function(node){
      params ={};
      if (node.attributes.resource =='biodatabase' ) {
        Ext.getCmp('workbench-grid-tabs').activate('workbench-biosequence-tab');
        params.biodatabase_id = node.id;
        Ext.getCmp('workbench-biosequence-grid').updateContent(params);
        Ext.getCmp('workbench-biodatabase-property-grid').updateContent(params);

      } else if (node.attributes.resource =='biodatabase_group' ) {
        Ext.getCmp('workbench-grid-tabs').activate('workbench-biodatabase-tab');
        params.biodatabase_group_id = node.id;
        Ext.getCmp('workbench-biodatabase-grid').updateContent(params);
      }
    };
    var seqGrid = new Ext.bio.BiosequenceGrid({
      id: 'workbench-biosequence-grid',
      pageSize: seqPageSize,
      store:biosequenceStore,
      biosequenceViewId: 'bio-sequence-view',
      region:'north',
      split:true
    });

    var seqView =   new  Ext.bio.BiosequenceViewPanel( {
      id: 'bio-sequence-view',
      region: 'center',
      split:true
    } );

    var viewport = new Ext.Viewport({
      layout: 'border',
      items: [
        // create instance immediately
        new Ext.BoxComponent({
          region: 'north',
          height: 32, // give north and south regions a height
          autoEl: {
            tag: 'div',
            html: north_html

          }
        }),
        {
          region: 'west',
          id: 'west-panel', // see Ext.getCmp() below
          title: 'Database Browser',
          split: true,
          width: 200,
          minSize: 175,
          //              maxSize: 400,
          collapsible: true,

          margins: '0 0 0 5',
          items: [
            {id: 'bio-database-group-tree',
              xtype:'database-group-tree',
              treeData: dbGroupTree,
              clickAction: function(node) {
                Ext.bio.workbench.updateContent(node);
                Ext.getCmp('tree-delete-icon').enable();
              }
            }],
          bbar :[{
              id:'tree-delete-icon',
              disabled: true,
              iconCls:'x-tree-delete',
              text: 'Delete',
              handler: function() {
                Ext.getCmp('bio-database-group-tree').deleteSelectedNode();
              }
            }]
        },
        new Ext.TabPanel({
          id: 'workbench-grid-tabs',
          region: 'center', // a center region is ALWAYS required for border layout
          collapsible: true,
          deferredRender: true,
          activeTab: 0,     // first tab initially active
          items: [
            {
              iconCls:'new_fasta',
              title: 'Sequences',
              id: 'workbench-biosequence-tab',
              layout: 'border',
              region:'west',
              border: false,
              split:true,
              margins: '2 0 5 5',
              width: 275,
              minSize: 100,
              maxSize: 500,
              items: [ {
                  xtype:'biosequence-grid',
                  id: 'workbench-biosequence-grid',
                  pageSize: seqPageSize,
                  store:biosequenceStore,
                  biosequenceViewId: 'bio-sequence-view',
                  region:'north',
                  split:true
                }, {
                  xtype: 'bio-sequence-view-panel',
                  id: 'bio-sequence-view',
                  region: 'center',
                  split:true

                } ]
            },  {
              iconCls:'new_view',
              title: 'Databases',
              autoScroll: true,
              id:'workbench-biodatabase-tab',
              items: [
                {id: 'workbench-biodatabase-grid',
                  xtype:'biodatabase-grid', 
                  pageSize: dbPageSize,
                  store: biodatabaseStore
                }
              ]
            }, {
              iconCls:'origin',
              title: 'Database Groups',
              autoScroll: true,
              id:'workbench-biodatabase-group-tab',
              items: [
                {id: 'workbench-biodatabase-groups-grid',
                  pageSize: databaseGroupPageSize,
                  xtype:'biodatabase-group-grid' ,
                  store: biodatabaseGroupStore }
              ]

            },  {
              iconCls:'origin',
              title: 'Blast Results',
              autoScroll: true,
              id:'workbench-blast-result-tab',
              items: [
                {id: 'workbench-blast-results-grid',
                  pageSize: blastResultPageSize,
                  xtype:'blast-result-grid' ,
                  store: blastResultStore }
              ]

            }, {
              iconCls:'origin',
              title: 'Running Jobs',
              autoScroll: true,
              id:'workbench-running-jobs-tab',
              items: [
                {id: 'workbench-jobs-grid',
                  pageSize: jobPageSize,
                  xtype:'job-grid' ,
                  store: jobStore }
              ]

            }, { iconCls:'origin',
              title: 'Job Log',
              autoScroll: true,
              id:'workbench-job-log-tab',
              items: [
                {id: 'workbench-job-logs-grid',
                  pageSize: jobPageSize,
                  xtype:'job-log-grid' ,
                  store: jobLogStore }
              ]

            }
          ]
        }),
        {
          region: 'east',
          title: 'Tools',
          collapsible: true,
          split: true,
          width: 225,
          minSize: 175,
          maxSize: 400,
          margins: '0 5 0 0',
          layout: {
            type: 'accordion',
            animate: true
          },
          items: [ {
              id: 'vbox-panel',
              layout: {
                type: 'vbox',
                pack: 'start',
                align: 'stretch'
              },
              defaults: {
                frame: true
              },
              items:  [
                { contentEl: 'rename-content',
                  height: 100
                }, {
                  height: 80,
                  contentEl: 'clean-content'
                } , {
                  height: 80,
                  contentEl: 'blast-content'
                }
                /*, { height: 60, contentEl: 'ncbi-blast-search' } */
              ],
              title: 'Tools',
              iconCls: 'settings',
              border: false
            }, {
              xtype: 'biodatabase-property-grid',
              id:'workbench-biodatabase-property-grid',
              restfulStore: biodatabasePropertyStore,
              iconCls: 'nav' ,
              border: false
            }
          ]
        }
      ]
    });

    var button1 = Ext.get('rename-biosequences');
    var winRenameSeq;
    button1.on('click', function(){
      if(!winRenameSeq){
        winRenameSeq = new Ext.bio.BiodatabaseRenamerWindow({
          dbStore: biodatabaseComboStore
        });
      }
      winRenameSeq.show(this);
    });

    var button2 = Ext.get('clean-biodatabase');
    var winBlastClean;
    button2.on('click', function(){
      if(!winBlastClean){
        winBlastClean = new Ext.bio.BlastCleanerWindow({
          dbStore: biodatabaseComboStore
        });
      }
      winBlastClean.show(this);
    });

    var button3 = Ext.get('blast-biodatabase');
    var winBlast;
    button3.on('click', function(){
      if(!winBlast){
        winBlast= new Ext.bio.BlastCreateDbsWindow({
          dbStore: biodatabaseComboStore
        });
      }
      winBlast.show(this);
    });

    //    var button4 = Ext.get('ncbi-blast-search');
    //    button4.on('click', function(){
    //      Ext.bio.ncbiBlastSearch("ncbi-blast-search-form");
    //    });


  });
    </script>
  </head>
  <body>
    <div id="rename-content" class="x-hide-display">
      <input type="button" id="rename-biosequences" value="Rename Sequences" /><br />
      <p>Allows you to rename sequences sequentially in a database with a prefix and sequential number.</p>
    </div>
    <div id="clean-content" class="x-hide-display">
      <input type="button" id="clean-biodatabase" value="Clean Database" /><br />
      <p>Allows you to clean a database with blast.</p>
    </div>
    <div id="blast-content" class="x-hide-display">
      <input type="button" id="blast-biodatabase" value="Blast Database" /><br />
      <p>Allows you to blast databases against one another.</p>
    </div>
    <div id="ncbi-blast-content" class="x-hide-display">
      <input type="button" id="ncbi-blast-search" value="NCBI Blast" /><br />
      <p>Blast Sequence against NCBI.</p>

    </div>

    <form id="ncbi-blast-search-form" class="x-hide-display">

    </form>


    <!--
    <div id="showtest-content" class="x-hide-display">
      <input type="button" id="show-msg" value="Show Message" /><br />
      <input type="button" id="hide-msg" value="Hide Message" /><br />
      <p>Test </p>
    </div>
    <div id="more-content" class="x-hide-display">
      <b>More Content.</b>
      <p>more awesome content will go here....</p>
    </div>

    -->
  </body>
</html>
