<html>
  <head>
    <title>BiococonutIsland :: Workbench </title>
    <%= stylesheet_link_tag "/javascripts/ext-3.0.0/resources/css/ext-all.css",
      "ext-override",
      "ncbi-style" %>

    <%= javascript_tag "var FORM_AUTH_TOKEN = '#{form_auth_token}';" %>

    <%= javascript_include_tag "ext-3.0.0/adapter/ext/ext-base",
      "ext-3.0.0/ext-all" ,
      "workbench/base",
      "workbench/database-group-tree",
      "workbench/App",
      "workbench/bio-grids",
      "workbench/bio-property-grid",
      "workbench/RowEditor",
      "workbench/bio-sequence-view-panel",
      "workbench/bio-db-renamer-form"
  %>

    <!-- GC -->
    <!-- LIBS -->
    <!-- ENDLIBS -->


    <!-- EXAMPLES -->

    <script type="text/javascript">

      Ext.namespace('Ext.workbenchdata');
      Ext.onReady(function(){
        var biosequenceStore = <%=
extjs_store( :controller => "workbench/biosequences",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }
).render(false)
%>;
    var biodatabaseStore = <%=
extjs_store( :controller => "workbench/biodatabases",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }

).render(false)
%>;
    var biodatabasePropertyStore = <%=
extjs_store( :controller => "workbench/biodatabases",
  :writer => {"encode" => false},
  :config => {
    "storeId" => 'biodatabase-property-store',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }
).render(false)
%>;

    var biodatabaseGroupStore = <%=
extjs_store( :controller => "workbench/biodatabase_groups",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => true,
    "restful" => true
  }
).render(false)
%>;
    var blastResultStore = <%=
extjs_store( :controller => "workbench/blast_results",
  :writer => {"encode" => false},
  :config => {
    "totalProperty" => 'results',
    "autoLoad" => false,
    "autoSave" => false,
    "restful" => true
  }
).render(false)
%>
    var seqPageSize = <%= biosequence_page_size %> ;
    var databaseGroupPageSize = <%= biodatabase_group_page_size %> ;
    var dbPageSize = <%= biodatabase_page_size %> ;
    var blastResultPageSize = <%= blast_result_page_size %> ;

    // BEGIN RAILS data DUMP
    Ext.workbenchdata.project_options = <%= @project_options.to_json %>;
    var north_html = '<h1 class="north-header"><%= link_to "BioFastaCoconutIsland", '/' %></h1> ';
    // END RAILS data dump  -- no erb code should go beyond this line
    var dbGroupTree = <%= BiodatabaseGroup.first.ext_tree(:expand_node => true).to_json %> ;
    // var dbGroupTree = {"expandable":true,"leaf":false,"text":"Default Database Group 1","children":[{"leaf":true,"text":"EST_Clade_A_3"},{"leaf":true,"text":"EST_Clade_A_6"},{"leaf":true,"text":"EST_Clade_C_6"},{"leaf":true,"text":"EST_Clade_A_1"},{"leaf":true,"text":"EST_Clade_A_5"},{"leaf":true,"text":"EST_Clade_A_3-Cleaned"},{"leaf":true,"text":"EST_Clade_A_6-Cleaned"},{"leaf":true,"text":"EST_Clade_C_6-Cleaned"},{"leaf":true,"text":"EST_Clade_A_1-Cleaned"},{"leaf":true,"text":"EST_Clade_A_5-Cleaned"},{"expandable":true,"leaf":false,"text":"Cleaned Data","children":[],"id":2,"expanded":true}],"id":1,"expanded":true} ;,

    // it is generally best to disable state management as dynamically-generated ids
    // can change across page loads, leading to unpredictable results.  The developer
    // should ensure that stable state ids are set for stateful components in real apps.
    Ext.state.Manager.setProvider(new Ext.state.CookieProvider());

    Ext.QuickTips.init();

    // use RowEditor for editing
    var editor = new Ext.ux.grid.RowEditor({
      saveText: 'Update'
    });

    Ext.bio.workbench.updateContent = function(node){
      params ={};
      if (node.attributes.resource =='biodatabase' ) {
        Ext.getCmp('workbench-grid-tabs').activate('workbench-biosequence-tab');
        params.biodatabase_id = node.id;
        Ext.getCmp('workbench-biosequence-grid').updateContent(params);
        Ext.getCmp('workbench-biodatabase-property-grid').updateContent(params);

      } else if (node.attributes.resource =='biodatabase_group' ) {
        Ext.getCmp('workbench-grid-tabs').activate('workbench-biodatabase-tab');
        params.biodatabase_group_id = node.id;
        Ext.getCmp('workbench-biodatabase-grid').updateContent(params);
      }
    };
    /*
    {id: 'workbench-biosequence-grid',
      xtype:'biosequence-grid',
      pageSize: seqPageSize,
      store:biosequenceStore,
      biosequenceViewId: 'bio-sequence-view'},
    { id: 'bio-sequence-view',
      xtype: 'bio-sequence-view-panel'
    }
     */

    var seqGrid = new Ext.bio.BiosequenceGrid({
      id: 'workbench-biosequence-grid',
      pageSize: seqPageSize,
      store:biosequenceStore,
      biosequenceViewId: 'bio-sequence-view',
      region:'north',
      split:true
    });

    var seqView =   new  Ext.bio.BiosequenceViewPanel( {
      id: 'bio-sequence-view',
      region: 'center',
      split:true
    } );

    var viewport = new Ext.Viewport({
      layout: 'border',
      items: [
        // create instance immediately
        new Ext.BoxComponent({
          region: 'north',
          height: 32, // give north and south regions a height
          autoEl: {
            tag: 'div',
            html: north_html
          }
        }),
        {
          region: 'west',
          id: 'west-panel', // see Ext.getCmp() below
          title: 'Database Browser',
          split: true,
          width: 200,
          minSize: 175,
          //              maxSize: 400,
          collapsible: true,

          margins: '0 0 0 5',
          items: [
            {id: 'bio-database-group-tree',
              xtype:'database-group-tree',
              treeData: dbGroupTree,
              clickAction: function(node) {
                Ext.bio.workbench.updateContent(node);
                Ext.getCmp('tree-delete-icon').enable();
              }
            }],
          bbar :[{
              id:'tree-delete-icon',
              disabled: true,
              iconCls:'x-tree-delete',
              text: 'Delete',
              handler: function() {
                Ext.getCmp('bio-database-group-tree').deleteSelectedNode();
              }
            }]
        },
        new Ext.TabPanel({
          id: 'workbench-grid-tabs',
          region: 'center', // a center region is ALWAYS required for border layout
          collapsible: true,
          deferredRender: true,
          activeTab: 0,     // first tab initially active

          items: [
            {

              iconCls:'new_fasta',
              title: 'Sequences',
              id: 'workbench-biosequence-tab',

              layout: 'border',
              region:'west',
              border: false,
              split:true,
              margins: '2 0 5 5',
              width: 275,
              minSize: 100,
              maxSize: 500,
              //items: [treePanel, detailsPanel]

              items: //[seqGrid,seqView]
              [
                {

                  xtype:'biosequence-grid',
                  id: 'workbench-biosequence-grid',
                  pageSize: seqPageSize,
                  store:biosequenceStore,
                  biosequenceViewId: 'bio-sequence-view',
                  region:'north',
                  split:true

                  //                  id: 'workbench-biosequence-grid',
                  //                  pageSize: seqPageSize,
                  //                  store:biosequenceStore,
                  //                  biosequenceViewId: 'bio-sequence-view'
                },
                {
                  //                  id: 'bio-sequence-view',
                  xtype: 'bio-sequence-view-panel',
                  id: 'bio-sequence-view',
                  region: 'center',
                  split:true

                }
              ]
            },  {
              iconCls:'new_view',
              title: 'Databases',
              autoScroll: true,
              id:'workbench-biodatabase-tab',
              items: [
                {id: 'workbench-biodatabase-grid',
                  xtype:'biodatabase-grid',
                  pageSize: dbPageSize,
                  store: biodatabaseStore }
              ]
            },{
              iconCls:'origin',
              title: 'Database Groups',
              autoScroll: true,
              id:'workbench-biodatabase-group-tab',
              items: [
                {id: 'workbench-biodatabase-groups-grid',
                  pageSize: databaseGroupPageSize,
                  xtype:'biodatabase-group-grid' ,
                  store: biodatabaseGroupStore }
              ]

            },  {
              iconCls:'origin',
              title: 'Blast Results',
              autoScroll: true,
              id:'workbench-blast-result-tab',
              items: [
                {id: 'workbench-blast-results-grid',
                  pageSize: blastResultPageSize,
                  xtype:'blast-result-grid' ,
                  store: blastResultStore }
              ]

            }

          ]
        }),
        {
          region: 'east',
          title: 'Tools',
          collapsible: true,
          split: true,
          width: 225,
          minSize: 175,
          maxSize: 400,
          margins: '0 5 0 0',
          layout: {
            type: 'accordion',
            animate: true
          },
          items: [ {
              xtype: 'biodatabase-property-grid',
              id:'workbench-biodatabase-property-grid',
              restfulStore: biodatabasePropertyStore,
              border: false,
              iconCls: 'settings'
            }
            //            , {
            //              title: 'Rename Sequences',
            //              border: false,
            //              iconCls: 'nav' ,
            //              xtype: 'bio-db-renamer-form',
            //              id: 'bio-db-renamer-form'
            //            }
          ]
        }
      ]
    });
    // get a reference to the HTML element with id "hideit" and add a click listener to it
    //        Ext.get("hideit").on('click', function(){
    // get a reference to the Panel that was created with id = 'west-panel'
    //          var w = Ext.getCmp('west-panel');
    // expand or collapse that Panel based on its collapsed property state
    //          w.collapsed ? w.expand() : w.collapse();
    //        });
  });
    </script>
  </head>
  <body>
    <!-- use class="x-hide-display" to prevent a brief flicker of the content -->
    <div id="west" class="x-hide-display">
      <p>Hi. I'm the west panel.</p>
    </div>
    <div id="center1" class="x-hide-display">
      <p><b>Done reading me? Close me by clicking the X in the top right corner.</b></p>
      <p>Vestibulum semper. Nullam non odio. Aliquam quam. Mauris eu lectus non nunc auctor ullamcorper. Sed tincidunt molestie enim. Phasellus lobortis justo sit amet quam. Duis nulla erat, varius a, cursus in, tempor sollicitudin, mauris. Aliquam mi velit, consectetuer mattis, consequat tristique, pulvinar ac, nisl. Aliquam mattis vehicula elit. Proin quis leo sed tellus scelerisque molestie. Quisque luctus. Integer mattis. Donec id augue sed leo aliquam egestas. Quisque in sem. Donec dictum enim in dolor. Praesent non erat. Nulla ultrices vestibulum quam.</p>
      <p>Duis hendrerit, est vel lobortis sagittis, tortor erat scelerisque tortor, sed pellentesque sem enim id metus. Maecenas at pede. Nulla velit libero, dictum at, mattis quis, sagittis vel, ante. Phasellus faucibus rutrum dui. Cras mauris elit, bibendum at, feugiat non, porta id, neque. Nulla et felis nec odio mollis vehicula. Donec elementum tincidunt mauris. Duis vel dui. Fusce iaculis enim ac nulla. In risus.</p>
      <p>Donec gravida. Donec et enim. Morbi sollicitudin, lacus a facilisis pulvinar, odio turpis dapibus elit, in tincidunt turpis felis nec libero. Nam vestibulum tempus ipsum. In hac habitasse platea dictumst. Nulla facilisi. Donec semper ligula. Donec commodo tortor in quam. Etiam massa. Ut tempus ligula eget tellus. Curabitur id velit ut velit varius commodo. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nulla facilisi. Fusce ornare pellentesque libero. Nunc rhoncus. Suspendisse potenti. Ut consequat, leo eu accumsan vehicula, justo sem lobortis elit, ac sollicitudin ipsum neque nec ante.</p>
      <p>Aliquam elementum mauris id sem. Vivamus varius, est ut nonummy consectetuer, nulla quam bibendum velit, ac gravida nisi felis sit amet urna. Aliquam nec risus. Maecenas lacinia purus ut velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Suspendisse sit amet dui vitae lacus fermentum sodales. Donec varius dapibus nisl. Praesent at velit id risus convallis bibendum. Aliquam felis nibh, rutrum nec, blandit non, mattis sit amet, magna. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Etiam varius dignissim nibh. Quisque id orci ac ante hendrerit molestie. Aliquam malesuada enim non neque.</p>
    </div>
    <div id="props-panel" class="x-hide-display" style="width:200px;height:200px;overflow:hidden;">
    </div>
    <div id="south" class="x-hide-display">
      <p>south - generally for informational stuff, also could be for status bar</p>
    </div>
  </body>
</html>
